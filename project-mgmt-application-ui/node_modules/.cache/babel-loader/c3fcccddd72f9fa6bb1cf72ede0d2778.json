{"ast":null,"code":"import _defineProperty from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\src\\\\assets\\\\components\\\\project\\\\Project.jsx\";\nimport React, { Component } from 'react';\nimport './Project.css';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport 'react-rangeslider/lib/index.css';\nimport AddProject from './AddProject';\nimport ViewProjects from './ViewProjects';\n\nvar Project =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Project, _Component);\n\n  function Project(props) {\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, props));\n    _this.state = _defineProperty({\n      userAction: props.userAction || 'addProject',\n      userList: props.userList,\n      currentProject: props.currentProject || {},\n      projectsList: props.projectsList || []\n    }, \"userAction\", '');\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"Next set of props\");\n      console.log(nextProps);\n      this.setState({\n        projectsList: nextProps.projectsList || []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addproject-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(AddProject, {\n        userList: this.state.userList,\n        currentProject: this.state.currentProject,\n        addProject: function addProject(userAction, projectDetails) {\n          return _this2.addProject(userAction, projectDetails);\n        },\n        userAction: this.state.userAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"addproject-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(ViewProjects, {\n        projectsList: this.state.projectsList,\n        updateProject: function updateProject(project) {\n          return _this2.updateProject(project);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"addProject\",\n    value: function addProject(userAction, projectDetails) {\n      var projectsList = this.state.projectsList;\n\n      if (userAction === 'addProject') {\n        projectsList.push(projectDetails);\n      } else if (userAction === 'updateProject') {\n        projectsList.map(function (project) {\n          if (project.id == projectDetails.id) {\n            project.projectName = projectDetails.projectName;\n            project.priority = projectDetails.priority;\n            project.managerName = projectDetails.managerName;\n            project.startDate = projectDetails.startDate;\n            project.endDate = projectDetails.endDate;\n            return project;\n          }\n        });\n      }\n\n      this.setState({\n        projectsList: projectsList,\n        currentProject: {},\n        userAction: ''\n      });\n    }\n  }, {\n    key: \"updateProject\",\n    value: function updateProject(project) {\n      this.setState({\n        currentProject: project,\n        userAction: 'updateProject'\n      });\n    }\n  }]);\n\n  return Project;\n}(Component);\n\nexport default Project;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\application-ui\\src\\assets\\components\\project\\Project.jsx"],"names":["React","Component","ListGroup","ListGroupItem","AddProject","ViewProjects","Project","props","state","userAction","userList","currentProject","projectsList","nextProps","console","log","setState","projectDetails","addProject","project","updateProject","push","map","id","projectName","priority","managerName","startDate","endDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Project.css';\r\nimport {\r\n    ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\nimport 'react-rangeslider/lib/index.css';\r\nimport AddProject from './AddProject';\r\nimport ViewProjects from './ViewProjects';\r\n\r\nclass Project extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userAction: props.userAction || 'addProject',\r\n            userList: props.userList,\r\n            currentProject: props.currentProject || {},\r\n            projectsList: props.projectsList || [],\r\n            userAction: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Next set of props\")\r\n        console.log(nextProps)\r\n        this.setState({\r\n            projectsList: nextProps.projectsList || []\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"addproject-section\">\r\n                    <AddProject userList={this.state.userList} currentProject={this.state.currentProject}\r\n                        addProject={(userAction, projectDetails) => this.addProject(userAction, projectDetails)}\r\n                        userAction={this.state.userAction} />\r\n                </div>\r\n                <div className=\"addproject-divider\">\r\n\r\n                </div>\r\n                <div>\r\n                    <ViewProjects projectsList={this.state.projectsList} updateProject={(project) => this.updateProject(project)} />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addProject(userAction, projectDetails) {\r\n        let projectsList = this.state.projectsList;\r\n        if (userAction === 'addProject') {\r\n            projectsList.push(projectDetails);\r\n        } else if (userAction === 'updateProject') {\r\n            projectsList.map(project => {\r\n                if (project.id == projectDetails.id) {\r\n                    project.projectName = projectDetails.projectName;\r\n                    project.priority = projectDetails.priority;\r\n                    project.managerName = projectDetails.managerName;\r\n                    project.startDate = projectDetails.startDate;\r\n                    project.endDate = projectDetails.endDate;\r\n                    return project;\r\n                }\r\n            });\r\n        }\r\n        this.setState({\r\n            projectsList: projectsList,\r\n            currentProject: {},\r\n            userAction: ''\r\n        });\r\n    }\r\n\r\n    updateProject(project) {\r\n        this.setState({\r\n            currentProject: project,\r\n            userAction: 'updateProject'\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}