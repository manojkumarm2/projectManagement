{"ast":null,"code":"import _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\src\\\\assets\\\\components\\\\project\\\\Project.jsx\";\nimport React, { Component } from 'react';\nimport './Project.css';\nimport 'react-rangeslider/lib/index.css';\nimport AddProject from './AddProject';\nimport ShowProjects from './ProjectsList';\nimport request from 'request';\nimport { Row, Modal, ModalBody, Spinner } from 'reactstrap';\n\nvar Project =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Project, _Component);\n\n  function Project(props) {\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, props));\n    _this.state = {\n      userAction: props.userAction || 'addProject',\n      userList: props.userList,\n      currentProject: props.currentProject || {},\n      projectsList: props.projectsList || []\n    };\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"Next set of props\");\n      console.log(nextProps);\n      this.setState({\n        userList: nextProps.userList || [],\n        projectsList: nextProps.projectsList || []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addproject-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(AddProject, {\n        userList: this.state.userList,\n        currentProject: this.state.currentProject,\n        addProject: function addProject(userAction, projectDetails) {\n          return _this2.addProject(userAction, projectDetails);\n        },\n        userAction: this.state.userAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"addproject-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(ShowProjects, {\n        projectsList: this.state.projectsList,\n        updateProject: function updateProject(project) {\n          return _this2.updateProject(project);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        isOpen: this.state.showLoadingModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Saving user action. Please wait...\")))));\n    }\n  }, {\n    key: \"addProject\",\n    value: function addProject(userAction, projectDetails) {\n      var projectsList = this.state.projectsList;\n      this.setState({\n        showLoadingModal: true\n      });\n      var dis = this;\n      request.post({\n        url: 'http://localhost:3000/spi/projects/addUpdate',\n        json: projectDetails\n      }, function (err, httpResponse, body) {\n        console.log(body);\n        dis.setState({\n          projectsList: body,\n          currentProject: {},\n          userAction: '',\n          showLoadingModal: false\n        });\n        dis.props.addProject(body);\n      });\n    }\n  }, {\n    key: \"updateProject\",\n    value: function updateProject(project) {\n      this.setState({\n        currentProject: project,\n        userAction: 'updateProject'\n      });\n    }\n  }]);\n\n  return Project;\n}(Component);\n\nexport default Project;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\project-mgmt-application-ui\\src\\assets\\components\\project\\Project.jsx"],"names":["React","Component","AddProject","ShowProjects","request","Row","Modal","ModalBody","Spinner","Project","props","state","userAction","userList","currentProject","projectsList","nextProps","console","log","setState","projectDetails","addProject","project","updateProject","showLoadingModal","dis","post","url","json","err","httpResponse","body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Project.css';\r\nimport 'react-rangeslider/lib/index.css';\r\nimport AddProject from './AddProject';\r\nimport ShowProjects from './ProjectsList';\r\nimport request from 'request';\r\nimport {\r\n    Row,\r\n    Modal, ModalBody, Spinner\r\n} from 'reactstrap';\r\n\r\nclass Project extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userAction: props.userAction || 'addProject',\r\n            userList: props.userList,\r\n            currentProject: props.currentProject || {},\r\n            projectsList: props.projectsList || []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Next set of props\")\r\n        console.log(nextProps)\r\n        this.setState({\r\n            userList: nextProps.userList || [],\r\n            projectsList: nextProps.projectsList || []\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"addproject-section\">\r\n                    <AddProject userList={this.state.userList} currentProject={this.state.currentProject}\r\n                        addProject={(userAction, projectDetails) => this.addProject(userAction, projectDetails)}\r\n                        userAction={this.state.userAction} />\r\n                </div>\r\n                <div className=\"addproject-divider\">\r\n\r\n                </div>\r\n                <div>\r\n                    <ShowProjects projectsList={this.state.projectsList} updateProject={(project) => this.updateProject(project)} />\r\n                </div>\r\n                <Modal isOpen={this.state.showLoadingModal}>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Spinner color=\"dark\" />\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Saving user action. Please wait...</p>\r\n                        </Row>\r\n\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addProject(userAction, projectDetails) {\r\n        let projectsList = this.state.projectsList;\r\n        this.setState({\r\n            showLoadingModal: true\r\n        });\r\n        var dis = this;\r\n        request.post(\r\n            {\r\n                url: 'http://localhost:3000/spi/projects/addUpdate',\r\n                json: projectDetails\r\n            },\r\n            function (err, httpResponse, body) {\r\n                console.log(body);\r\n                dis.setState({\r\n                    projectsList: body,\r\n                    currentProject: {},\r\n                    userAction: '',\r\n                    showLoadingModal: false\r\n                });\r\n                dis.props.addProject(body);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    updateProject(project) {\r\n        this.setState({\r\n            currentProject: project,\r\n            userAction: 'updateProject'\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}