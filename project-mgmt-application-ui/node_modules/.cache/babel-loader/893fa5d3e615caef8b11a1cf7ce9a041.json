{"ast":null,"code":"import _objectSpread from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\src\\\\assets\\\\components\\\\task\\\\ViewTask.jsx\";\nimport React, { Component } from 'react';\nimport TaskList from './TaskList';\nimport './Task.css';\nimport request from 'request';\n\nvar ViewTask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewTask, _Component);\n\n  function ViewTask(props) {\n    var _this;\n\n    _classCallCheck(this, ViewTask);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewTask).call(this, props));\n    _this.state = {\n      taskList: props.taskList || []\n    };\n    return _this;\n  }\n\n  _createClass(ViewTask, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log(\"Next set of props\");\n      console.log(props);\n      var currentTask = props.currentTask;\n      var additionalProps = {};\n\n      if (currentTask) {\n        additionalProps = {\n          id: currentTask.id || '',\n          projectName: currentTask.projectName || '',\n          taskName: currentTask.taskName || '',\n          priority: currentTask.priority,\n          isParentTask: currentTask.isParentTask,\n          parentTask: currentTask.parentTask,\n          startDate: currentTask.startDate || '',\n          endDate: currentTask.endDate || '',\n          user: currentTask.user\n        };\n      }\n\n      this.setState(_objectSpread({\n        userList: props.userList,\n        taskList: props.taskList,\n        projectsList: props.projectsList,\n        parentTaskList: props.parentTaskList,\n        userAction: props.userAction || 'addTask'\n      }, additionalProps));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"user-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        taskList: this.state.taskList,\n        editTask: function editTask(task) {\n          return _this2.editTask(task);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"editTask\",\n    value: function editTask(task) {\n      this.setState({\n        currentTask: task,\n        userAction: 'editTask'\n      });\n    }\n  }]);\n\n  return ViewTask;\n}(Component);\n\nexport default ViewTask;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\application-ui\\src\\assets\\components\\task\\ViewTask.jsx"],"names":["React","Component","TaskList","request","ViewTask","props","state","taskList","console","log","currentTask","additionalProps","id","projectName","taskName","priority","isParentTask","parentTask","startDate","endDate","user","setState","userList","projectsList","parentTaskList","userAction","task","editTask"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;;IAEMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,IAAkB;AADjB,KAAb;AAFiB;AAKlB;;;;8CAEyBF,K,EAAO;AAC/BG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,UAAIK,WAAW,GAAGL,KAAK,CAACK,WAAxB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACA,UAAID,WAAJ,EAAiB;AACbC,QAAAA,eAAe,GAAG;AACdC,UAAAA,EAAE,EAAEF,WAAW,CAACE,EAAZ,IAAkB,EADR;AAEdC,UAAAA,WAAW,EAAEH,WAAW,CAACG,WAAZ,IAA2B,EAF1B;AAGdC,UAAAA,QAAQ,EAAEJ,WAAW,CAACI,QAAZ,IAAwB,EAHpB;AAIdC,UAAAA,QAAQ,EAAEL,WAAW,CAACK,QAJR;AAKdC,UAAAA,YAAY,EAAEN,WAAW,CAACM,YALZ;AAMdC,UAAAA,UAAU,EAAEP,WAAW,CAACO,UANV;AAOdC,UAAAA,SAAS,EAAER,WAAW,CAACQ,SAAZ,IAAyB,EAPtB;AAQdC,UAAAA,OAAO,EAAET,WAAW,CAACS,OAAZ,IAAuB,EARlB;AASdC,UAAAA,IAAI,EAAEV,WAAW,CAACU;AATJ,SAAlB;AAWH;;AACD,WAAKC,QAAL;AACIC,QAAAA,QAAQ,EAAEjB,KAAK,CAACiB,QADpB;AAEIf,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFpB;AAGIgB,QAAAA,YAAY,EAAElB,KAAK,CAACkB,YAHxB;AAIIC,QAAAA,cAAc,EAAEnB,KAAK,CAACmB,cAJ1B;AAKIC,QAAAA,UAAU,EAAEpB,KAAK,CAACoB,UAAN,IAAoB;AALpC,SAMOd,eANP;AASH;;;6BAEU;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAA/B;AAAyC,QAAA,QAAQ,EAAE,kBAACmB,IAAD;AAAA,iBAAU,MAAI,CAACC,QAAL,CAAcD,IAAd,CAAV;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;6BAEQA,I,EAAM;AACb,WAAKL,QAAL,CAAc;AACZX,QAAAA,WAAW,EAAEgB,IADD;AAEZD,QAAAA,UAAU,EAAE;AAFA,OAAd;AAID;;;;EApDoBxB,S;;AAyDvB,eAAeG,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport TaskList from './TaskList';\r\nimport './Task.css';\r\nimport request from 'request';\r\n\r\nclass ViewTask extends Component {\r\n\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      taskList: props.taskList || []\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"Next set of props\")\r\n    console.log(props)\r\n    let currentTask = props.currentTask;\r\n    let additionalProps = {}\r\n    if (currentTask) {\r\n        additionalProps = {\r\n            id: currentTask.id || '',\r\n            projectName: currentTask.projectName || '',\r\n            taskName: currentTask.taskName || '',\r\n            priority: currentTask.priority,\r\n            isParentTask: currentTask.isParentTask,\r\n            parentTask: currentTask.parentTask,\r\n            startDate: currentTask.startDate || '',\r\n            endDate: currentTask.endDate || '',\r\n            user: currentTask.user\r\n        }\r\n    }\r\n    this.setState({\r\n        userList: props.userList,\r\n        taskList: props.taskList,\r\n        projectsList: props.projectsList,\r\n        parentTaskList: props.parentTaskList,\r\n        userAction: props.userAction || 'addTask',\r\n        ...additionalProps\r\n    });\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user-section\">\r\n        <div className=\"divider\"></div>\r\n        <TaskList taskList={this.state.taskList} editTask={(task) => this.editTask(task)}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  editTask(task) {\r\n    this.setState({\r\n      currentTask: task,\r\n      userAction: 'editTask'\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default ViewTask;\r\n"]},"metadata":{},"sourceType":"module"}