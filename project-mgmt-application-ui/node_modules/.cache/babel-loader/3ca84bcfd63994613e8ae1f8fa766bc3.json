{"ast":null,"code":"import _defineProperty from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\src\\\\assets\\\\components\\\\task\\\\AddTask.jsx\";\nimport React, { Component } from 'react';\nimport './Task.css';\nimport { Button, Form, FormGroup, Label, Input, Col, Modal, ModalHeader, ModalBody, ModalFooter, ListGroup, ListGroupItem } from 'reactstrap';\nimport 'react-rangeslider/lib/index.css';\n\nvar AddTask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddTask, _Component);\n\n  function AddTask(props) {\n    var _this;\n\n    _classCallCheck(this, AddTask);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddTask).call(this, props));\n    var labels = {\n      'addTask': 'Add Task',\n      'editTask': 'Edit Task'\n    };\n    _this.state = {\n      taskList: props.taskList || [],\n      projectsList: props.projectsList || [],\n      userAction: props.userAction || 'addTask',\n      userList: props.userList || [],\n      projectName: '',\n      priority: 0,\n      currentTask: {},\n      projectModal: false,\n      userModal: false,\n      taskModal: false,\n      parentTask: {},\n      labels: labels,\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(AddTask, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log(\"Next set of props\");\n      console.log(props);\n      var currentTask = props.currentTask;\n      var additionalProps = {};\n\n      if (currentTask) {\n        additionalProps = {\n          id: currentTask.id,\n          projectName: currentTask.projectName,\n          taskName: currentTask.taskName,\n          priority: currentTask.priority,\n          isParentTask: currentTask.isParentTask,\n          parentTask: currentTask.parentTask,\n          startDate: currentTask.startDate,\n          endDate: currentTask.endDate,\n          user: currentTask.user\n        };\n      }\n\n      this.setState(_objectSpread({\n        userList: props.userList,\n        taskList: props.taskList,\n        projectsList: props.projectsList,\n        userAction: props.userAction || 'addTask'\n      }, additionalProps));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"projectName\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Project:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.projectName,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleProjectModal(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        id: \"projectModal\",\n        isOpen: this.state.projectModal,\n        toggle: function toggle() {\n          return _this2.toggleProjectModal();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggleProjectModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Select Project\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.projectsList && this.state.projectsList.length > 0 ? this.state.projectsList.map(function (project) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignProject(project);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, project.projectName);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Please add users to add/update projects\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggleProjectModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startEnd\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Task: \"), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.taskName,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"taskName\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startEnd\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Is Parent Task: \"), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        checked: this.state.isParentTask,\n        onChange: function onChange(e) {\n          return _this2.parentTaskSelector(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), ' ', \"Parent Task\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"priority\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Priority:\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"range\",\n        min: \"1\",\n        max: \"30\",\n        value: this.state.priority,\n        class: \"slider\",\n        onChange: function onChange(e) {\n          return _this2.onPriorityChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"parentTask\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Parent Task:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.parentTask.taskName,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleTaskModal(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        id: \"taskModal\",\n        isOpen: this.state.taskModal,\n        toggle: function toggle() {\n          return _this2.toggleTaskModal();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggleTaskModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Select Parent Task\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.taskList && this.state.taskList.length > 0 ? this.state.taskList.map(function (task) {\n        if (task.isParentTask) {\n          return React.createElement(ListGroupItem, {\n            tag: \"button\",\n            action: true,\n            onClick: function onClick() {\n              return _this2.assignTask(task);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, task.taskName);\n        }\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Please add Tasks\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggleTaskModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startDate\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Start Date:\"), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"startDate\",\n        id: \"startDate\",\n        placeholder: \"Start Date\",\n        disabled: !this.state.isParentTask,\n        value: this.state.startDate,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"startDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(Label, {\n        for: \"endDate\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"End Date:\"), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"endData\",\n        id: \"endData\",\n        placeholder: \"End Date\",\n        disabled: !this.state.isParentTask,\n        value: this.state.endDate,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"endDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"user\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"User:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.user.firstName,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleUserModal(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        id: \"userModal\",\n        isOpen: this.state.userModal,\n        toggle: function toggle() {\n          return _this2.toggleUserModal();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggleUserModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Select User\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.state.userList && this.state.userList.length > 0 ? this.state.userList.map(function (user) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignUser(user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, user.firstName + ' ' + user.lastName);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Please add Tasks\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggleUserModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: 12,\n          offset: 9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.addOrEditTask(e, _this2.state.userAction);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.labels[this.state.userAction]), ' ', React.createElement(Button, {\n        className: \"secondary\",\n        onClick: function onClick(e) {\n          return _this2.reset(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Reset\")))));\n    }\n  }, {\n    key: \"parentTaskSelector\",\n    value: function parentTaskSelector() {\n      var prevState = this.state.isParentTask;\n      this.setState({\n        isParentTask: !prevState\n      });\n    }\n  }, {\n    key: \"assignUser\",\n    value: function assignUser(user) {\n      this.setState(function (prevState) {\n        return {\n          user: user,\n          userModal: !prevState.userModal\n        };\n      });\n    }\n  }, {\n    key: \"assignProject\",\n    value: function assignProject(project) {\n      this.setState(function (prevState) {\n        return {\n          projectName: project.projectName,\n          projectModal: !prevState.projectModal\n        };\n      });\n    }\n  }, {\n    key: \"assignTask\",\n    value: function assignTask(task) {\n      this.setState(function (prevState) {\n        return {\n          parentTask: task,\n          taskModal: !prevState.taskModal\n        };\n      });\n    }\n  }, {\n    key: \"selectDate\",\n    value: function selectDate() {\n      var prevState = this.state.selectDate;\n      this.setState({\n        selectDate: !prevState,\n        datePickerDisabled: prevState\n      });\n    }\n  }, {\n    key: \"toggleTaskModal\",\n    value: function toggleTaskModal() {\n      this.setState(function (prevState) {\n        return {\n          taskModal: !prevState.taskModal\n        };\n      });\n    }\n  }, {\n    key: \"toggleProjectModal\",\n    value: function toggleProjectModal() {\n      this.setState(function (prevState) {\n        return {\n          projectModal: !prevState.projectModal\n        };\n      });\n    }\n  }, {\n    key: \"toggleUserModal\",\n    value: function toggleUserModal() {\n      this.setState(function (prevState) {\n        return {\n          userModal: !prevState.userModal\n        };\n      });\n    }\n  }, {\n    key: \"onPriorityChange\",\n    value: function onPriorityChange(args) {\n      console.log(args.target.value);\n      this.setState({\n        priority: args[0]\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(e) {\n      this.setState({\n        projectName: '',\n        taskName: '',\n        priority: 0,\n        isParentTask: false,\n        parentTask: {},\n        startDate: '',\n        endDate: '',\n        user: {}\n      });\n    }\n  }, {\n    key: \"addOrEditTask\",\n    value: function addOrEditTask(e, userAction) {\n      console.log(e);\n      console.log(userAction);\n      var task = {\n        projectName: this.state.projectName,\n        taskName: this.state.taskName,\n        priority: this.state.priority,\n        isParentTask: this.state.isParentTask,\n        parentTask: this.state.parentTask,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        user: this.state.user\n      };\n\n      if (userAction === 'addTask') {\n        task.id = 'taskid-' + Math.random().toString(36).substr(2, 16);\n        task.status = \"New\";\n      }\n\n      if (userAction === 'updateProject') {\n        task.id = this.state.id;\n      } // TODO - validation\n\n\n      console.log(task);\n      this.props.addOrEditTask(userAction, task);\n      this.reset();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      this.setState(_defineProperty({}, name, e.target.value));\n    }\n  }]);\n\n  return AddTask;\n}(Component);\n\nexport default AddTask;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\application-ui\\src\\assets\\components\\task\\AddTask.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Col","Modal","ModalHeader","ModalBody","ModalFooter","ListGroup","ListGroupItem","AddTask","props","labels","state","taskList","projectsList","userAction","userList","projectName","priority","currentTask","projectModal","userModal","taskModal","parentTask","user","console","log","additionalProps","id","taskName","isParentTask","startDate","endDate","setState","e","toggleProjectModal","className","length","map","project","assignProject","handleChange","parentTaskSelector","onPriorityChange","toggleTaskModal","task","assignTask","firstName","toggleUserModal","assignUser","lastName","size","offset","addOrEditTask","reset","prevState","selectDate","datePickerDisabled","args","target","value","Math","random","toString","substr","status","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Task.css';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input, Col,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\nimport 'react-rangeslider/lib/index.css'\r\n\r\nclass AddTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const labels = {\r\n            'addTask': 'Add Task',\r\n            'editTask': 'Edit Task'\r\n        };\r\n        this.state = {\r\n            taskList: props.taskList || [],\r\n            projectsList: props.projectsList || [],\r\n            userAction: props.userAction || 'addTask',\r\n            userList: props.userList || [],\r\n            projectName: '',\r\n            priority: 0,\r\n            currentTask: {},\r\n            projectModal: false,\r\n            userModal: false,\r\n            taskModal: false,\r\n            parentTask: {},\r\n            labels: labels,\r\n            user: {}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        console.log(\"Next set of props\")\r\n        console.log(props)\r\n        let currentTask = props.currentTask;\r\n        let additionalProps = {}\r\n        if (currentTask) {\r\n            additionalProps = {\r\n                id: currentTask.id,\r\n                projectName: currentTask.projectName,\r\n                taskName: currentTask.taskName,\r\n                priority: currentTask.priority,\r\n                isParentTask: currentTask.isParentTask,\r\n                parentTask: currentTask.parentTask,\r\n                startDate: currentTask.startDate,\r\n                endDate: currentTask.endDate,\r\n                user: currentTask.user\r\n            }\r\n        }\r\n        this.setState({\r\n            userList: props.userList,\r\n            taskList: props.taskList,\r\n            projectsList: props.projectsList,\r\n            userAction: props.userAction || 'addTask',\r\n            ...additionalProps\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-section\">\r\n                <Form>\r\n                    <FormGroup row>\r\n                        <Label for=\"projectName\" sm={3}>Project:</Label>\r\n                        <Col sm={6}>\r\n                            <Input type=\"text\" value={this.state.projectName} disabled />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <Button onClick={e => this.toggleProjectModal(e)}>Search</Button>\r\n                            <Modal id='projectModal' isOpen={this.state.projectModal} toggle={() => this.toggleProjectModal()} className={this.props.className}>\r\n                                <ModalHeader toggle={() => this.toggleProjectModal()}>Select Project</ModalHeader>\r\n                                <ModalBody>\r\n                                    <ListGroup>\r\n                                        {this.state.projectsList && this.state.projectsList.length > 0 ?\r\n                                            this.state.projectsList.map(\r\n                                                project => {\r\n                                                    return (\r\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignProject(project)}>{project.projectName}</ListGroupItem>\r\n                                                    );\r\n                                                })\r\n                                            : <ListGroupItem disabled>Please add users to add/update projects</ListGroupItem>}\r\n                                    </ListGroup>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"secondary\" onClick={() => this.toggleProjectModal()}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"startEnd\" sm={3}>Task: </Label>\r\n                        <Col sm={9}>\r\n                            <Input type=\"text\" value={this.state.taskName} onChange={e => this.handleChange(\"taskName\", e)} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n\r\n                        <Label for=\"startEnd\" sm={3}>Is Parent Task: </Label>\r\n                        <Col sm={9}>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" checked={this.state.isParentTask} onChange={e => this.parentTaskSelector(e)} />{' '}\r\n                                Parent Task\r\n                            </Label>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"priority\" sm={2}>Priority:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"range\" min=\"1\" max=\"30\"\r\n                                value={this.state.priority} class=\"slider\"\r\n                                onChange={(e) => this.onPriorityChange(e)} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"parentTask\" sm={3}>Parent Task:</Label>\r\n                        <Col sm={6}>\r\n                            <Input type=\"text\" value={this.state.parentTask.taskName} disabled />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <Button onClick={e => this.toggleTaskModal(e)}>Search</Button>\r\n                            <Modal id='taskModal' isOpen={this.state.taskModal} toggle={() => this.toggleTaskModal()} className={this.props.className}>\r\n                                <ModalHeader toggle={() => this.toggleTaskModal()}>Select Parent Task</ModalHeader>\r\n                                <ModalBody>\r\n                                    <ListGroup>\r\n                                        {this.state.taskList && this.state.taskList.length > 0 ?\r\n                                            this.state.taskList.map(\r\n                                                task => {\r\n                                                    if (task.isParentTask) {\r\n                                                        return (\r\n                                                            <ListGroupItem tag=\"button\" action onClick={() => this.assignTask(task)}>{task.taskName}</ListGroupItem>\r\n                                                        );\r\n                                                    }\r\n                                                })\r\n                                            : <ListGroupItem disabled>Please add Tasks</ListGroupItem>}\r\n                                    </ListGroup>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"secondary\" onClick={() => this.toggleTaskModal()}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"startDate\" sm={2}>Start Date:</Label>\r\n                        <Col sm={4}>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"startDate\"\r\n                                id=\"startDate\"\r\n                                placeholder=\"Start Date\"\r\n                                disabled={!this.state.isParentTask}\r\n                                value={this.state.startDate}\r\n                                onChange={e => this.handleChange(\"startDate\", e)}\r\n                            />\r\n                        </Col>\r\n                        <Label for=\"endDate\" sm={2}>End Date:</Label>\r\n                        <Col sm={4}>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"endData\"\r\n                                id=\"endData\"\r\n                                placeholder=\"End Date\"\r\n                                disabled={!this.state.isParentTask}\r\n                                value={this.state.endDate}\r\n                                onChange={e => this.handleChange(\"endDate\", e)}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"user\" sm={3}>User:</Label>\r\n                        <Col sm={6}>\r\n                            <Input type=\"text\" value={this.state.user.firstName} disabled />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <Button onClick={e => this.toggleUserModal(e)}>Search</Button>\r\n                            <Modal id='userModal' isOpen={this.state.userModal} toggle={() => this.toggleUserModal()} className={this.props.className}>\r\n                                <ModalHeader toggle={() => this.toggleUserModal()}>Select User</ModalHeader>\r\n                                <ModalBody>\r\n                                    <ListGroup>\r\n                                        {this.state.userList && this.state.userList.length > 0 ?\r\n                                            this.state.userList.map(\r\n                                                user => {\r\n                                                    return (\r\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignUser(user)}>{user.firstName + ' ' + user.lastName}</ListGroupItem>\r\n                                                    );\r\n                                                })\r\n                                            : <ListGroupItem disabled>Please add Tasks</ListGroupItem>}\r\n                                    </ListGroup>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"secondary\" onClick={() => this.toggleUserModal()}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup check row>\r\n                        <Col sm={{ size: 12, offset: 9 }}>\r\n                            <Button onClick={e => this.addOrEditTask(e, this.state.userAction)}>{this.state.labels[this.state.userAction]}</Button>{' '}\r\n                            <Button className=\"secondary\" onClick={e => this.reset(e)}>Reset</Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    parentTaskSelector() {\r\n        const prevState = this.state.isParentTask;\r\n        this.setState(({\r\n            isParentTask: !prevState\r\n        }));\r\n    }\r\n\r\n    assignUser(user) {\r\n        this.setState(prevState => ({\r\n            user: user,\r\n            userModal: !prevState.userModal\r\n        }));\r\n    }\r\n\r\n    assignProject(project) {\r\n        this.setState(prevState => ({\r\n            projectName: project.projectName,\r\n            projectModal: !prevState.projectModal\r\n        }));\r\n    }\r\n\r\n    assignTask(task) {\r\n        this.setState(prevState => ({\r\n            parentTask: task,\r\n            taskModal: !prevState.taskModal\r\n        }));\r\n    }\r\n\r\n    selectDate() {\r\n        const prevState = this.state.selectDate\r\n        this.setState(({\r\n            selectDate: !prevState,\r\n            datePickerDisabled: prevState\r\n        }));\r\n\r\n    }\r\n\r\n    toggleTaskModal() {\r\n        this.setState(prevState => ({\r\n            taskModal: !prevState.taskModal\r\n        }));\r\n    }\r\n\r\n    toggleProjectModal() {\r\n        this.setState(prevState => ({\r\n            projectModal: !prevState.projectModal\r\n        }));\r\n    }\r\n\r\n    toggleUserModal() {\r\n        this.setState(prevState => ({\r\n            userModal: !prevState.userModal\r\n        }));\r\n    }\r\n\r\n    onPriorityChange(args) {\r\n        console.log(args.target.value)\r\n        this.setState({\r\n            priority: args[0]\r\n        });\r\n    }\r\n\r\n    reset(e) {\r\n        this.setState({\r\n            projectName: '',\r\n            taskName: '',\r\n            priority: 0,\r\n            isParentTask: false,\r\n            parentTask: {},\r\n            startDate: '',\r\n            endDate: '',\r\n            user: {}\r\n        })\r\n    }\r\n\r\n    addOrEditTask(e, userAction) {\r\n        console.log(e);\r\n        console.log(userAction)\r\n        const task = {\r\n            projectName: this.state.projectName,\r\n            taskName: this.state.taskName,\r\n            priority: this.state.priority,\r\n            isParentTask: this.state.isParentTask,\r\n            parentTask: this.state.parentTask,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate,\r\n            user: this.state.user\r\n        };\r\n        if (userAction === 'addTask') {\r\n            task.id = 'taskid-' + Math.random().toString(36).substr(2, 16);\r\n            task.status = \"New\";\r\n        }\r\n        if (userAction === 'updateProject') {\r\n            task.id = this.state.id;\r\n        }\r\n\r\n        // TODO - validation\r\n        console.log(task);\r\n        this.props.addOrEditTask(userAction, task);\r\n        this.reset();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        this.setState({\r\n            [name]: e.target.value\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default AddTask;\r\n"]},"metadata":{},"sourceType":"module"}