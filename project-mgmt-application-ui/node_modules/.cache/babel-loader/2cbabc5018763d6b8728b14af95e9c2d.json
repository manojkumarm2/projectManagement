{"ast":null,"code":"import _defineProperty from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\src\\\\assets\\\\components\\\\project\\\\AddProject.jsx\";\nimport React, { Component } from 'react';\nimport './Project.css';\nimport { Button, Form, FormGroup, Label, Input, Col, Modal, ModalHeader, ModalBody, ModalFooter, ListGroup, ListGroupItem } from 'reactstrap';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\n\nvar AddProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddProject, _Component);\n\n  function AddProject(props) {\n    var _this;\n\n    _classCallCheck(this, AddProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProject).call(this, props));\n    var labels = {\n      'addProject': 'Add',\n      'updateProject': 'Update'\n    };\n    var projectDetails = props.currentProject || {};\n    _this.state = {\n      id: projectDetails.id || '',\n      projectName: projectDetails.projectName || '',\n      priority: projectDetails.priority || 0,\n      managerName: projectDetails.managerName || '',\n      managerId: projectDetails.managerId || '',\n      userAction: props.userAction || 'addProject',\n      labels: labels,\n      modal: false,\n      userList: props.userList,\n      selectDate: false,\n      datePickerDisabled: true,\n      startDate: '',\n      endDate: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddProject, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"Next set of props\");\n      console.log(nextProps);\n      var projectDetails = nextProps.currentProject;\n\n      if (projectDetails) {\n        this.setState({\n          userList: nextProps.userList,\n          id: projectDetails.id || '',\n          projectName: projectDetails.projectName || '',\n          priority: projectDetails.priority || 0,\n          managerName: projectDetails.managerName || '',\n          managerId: projectDetails.managerId || '',\n          userAction: nextProps.userAction || 'addProject'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"firstName\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Project:\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.projectName,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"projectName\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startEnd\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Col, {\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        checked: this.state.selectDate,\n        onChange: function onChange(e) {\n          return _this2.selectDate(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), ' ', \"Set Start and End Date\")), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"startDate\",\n        id: \"startDate\",\n        placeholder: \"Start Date\",\n        disabled: this.state.datePickerDisabled,\n        value: this.state.startDate,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"startDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"endDate\",\n        id: \"endDate\",\n        placeholder: \"End Date\",\n        disabled: this.state.datePickerDisabled,\n        value: this.state.endDate,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"endDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"priority\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Priority:\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        value: this.state.priority,\n        onChange: function onChange() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _this2.onPriorityChange(args);\n        },\n        min: 0,\n        max: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"manager\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Manager:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        disabled: true,\n        value: this.state.managerName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.searchUser(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Select User\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.state.userList && this.state.userList.length > 0 ? this.state.userList.map(function (user) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignUser(user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, user.firstName + ' ' + user.lastName);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Please add users to add/update projects\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: 12,\n          offset: 9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.addOrEditProject(e, _this2.state.userAction);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.labels[this.state.userAction]), ' ', React.createElement(Button, {\n        className: \"secondary\",\n        onClick: function onClick(e) {\n          return _this2.reset(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Reset\")))));\n    }\n  }, {\n    key: \"selectDate\",\n    value: function selectDate() {\n      var prevState = this.state.selectDate;\n      this.setState({\n        selectDate: !prevState,\n        datePickerDisabled: prevState\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"assignUser\",\n    value: function assignUser(user) {\n      console.log(user);\n      this.setState(function (prevState) {\n        return {\n          managerName: user.firstName + ' ' + user.lastName,\n          managerId: user.id,\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"onPriorityChange\",\n    value: function onPriorityChange(args) {\n      this.setState({\n        priority: args[0]\n      });\n    }\n  }, {\n    key: \"searchUser\",\n    value: function searchUser(e) {\n      this.toggle();\n      console.log(e);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(e) {\n      this.setState({\n        projectName: '',\n        priority: 0,\n        managerName: '',\n        managerId: '',\n        selectDate: false,\n        datePickerDisabled: true,\n        startDate: '',\n        endDate: '',\n        id: '',\n        userAction: 'addProject'\n      });\n    }\n  }, {\n    key: \"addOrEditProject\",\n    value: function addOrEditProject(e, userAction) {\n      console.log(e);\n      console.log(userAction);\n      var projectDetails = {\n        projectName: this.state.projectName,\n        priority: this.state.priority,\n        managerName: this.state.managerName,\n        managerId: this.state.managerId,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate\n      };\n\n      if (userAction === 'addProject') {\n        projectDetails.id = 'id-' + Math.random().toString(36).substr(2, 16);\n        projectDetails.status = \"New\";\n      }\n\n      if (userAction === 'updateProject') {\n        projectDetails.id = this.state.id;\n      } // TODO - validation\n\n\n      console.log(projectDetails);\n      this.props.addProject(userAction, projectDetails);\n      this.reset();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      this.setState(_defineProperty({}, name, e.target.value));\n    }\n  }]);\n\n  return AddProject;\n}(Component);\n\nexport default AddProject;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\application-ui\\src\\assets\\components\\project\\AddProject.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Col","Modal","ModalHeader","ModalBody","ModalFooter","ListGroup","ListGroupItem","Slider","AddProject","props","labels","projectDetails","currentProject","state","id","projectName","priority","managerName","managerId","userAction","modal","userList","selectDate","datePickerDisabled","startDate","endDate","nextProps","console","log","setState","e","handleChange","args","onPriorityChange","searchUser","toggle","className","length","map","user","assignUser","firstName","lastName","size","offset","addOrEditProject","reset","prevState","Math","random","toString","substr","status","addProject","name","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Project.css';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input, Col,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\nimport Slider from 'react-rangeslider'\r\nimport 'react-rangeslider/lib/index.css'\r\n\r\nclass AddProject extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const labels = {\r\n            'addProject': 'Add',\r\n            'updateProject': 'Update'\r\n        };\r\n        const projectDetails = props.currentProject || {};\r\n        this.state = {\r\n            id: projectDetails.id || '',\r\n            projectName: projectDetails.projectName || '',\r\n            priority: projectDetails.priority || 0,\r\n            managerName: projectDetails.managerName || '',\r\n            managerId: projectDetails.managerId || '',\r\n            userAction: props.userAction || 'addProject',\r\n            labels: labels,\r\n            modal: false,\r\n            userList: props.userList,\r\n            selectDate: false,\r\n            datePickerDisabled: true,\r\n            startDate: '',\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Next set of props\")\r\n        console.log(nextProps)\r\n        const projectDetails = nextProps.currentProject;\r\n        if (projectDetails) {\r\n            this.setState({\r\n                userList: nextProps.userList,\r\n                id: projectDetails.id || '',\r\n                projectName: projectDetails.projectName || '',\r\n                priority: projectDetails.priority || 0,\r\n                managerName: projectDetails.managerName || '',\r\n                managerId: projectDetails.managerId || '',\r\n                userAction: nextProps.userAction || 'addProject',\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-section\">\r\n                <Form>\r\n                    <FormGroup row>\r\n                        <Label for=\"firstName\" sm={2}>Project:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"text\" value={this.state.projectName} onChange={e => this.handleChange(\"projectName\", e)} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"startEnd\" sm={2}></Label>\r\n                        <Col sm={2}>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" id=\"checkbox\" checked={this.state.selectDate} onChange={e => this.selectDate(e)} />{' '}\r\n                                Set Start and End Date\r\n                            </Label>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"startDate\"\r\n                                id=\"startDate\"\r\n                                placeholder=\"Start Date\"\r\n                                disabled={this.state.datePickerDisabled}\r\n                                value={this.state.startDate}\r\n                                onChange={e => this.handleChange(\"startDate\", e)}\r\n                            />\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"endDate\"\r\n                                id=\"endDate\"\r\n                                placeholder=\"End Date\"\r\n                                disabled={this.state.datePickerDisabled}\r\n                                value={this.state.endDate}\r\n                                onChange={e => this.handleChange(\"endDate\", e)}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"priority\" sm={2}>Priority:</Label>\r\n                        <Col sm={10}>\r\n                            <Slider\r\n                                value={this.state.priority}\r\n                                onChange={(...args) => this.onPriorityChange(args)}\r\n                                min={0}\r\n                                max={30}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"manager\" sm={2}>Manager:</Label>\r\n                        <Col sm={6}>\r\n                            <Input type=\"text\" disabled value={this.state.managerName} />\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <Button onClick={e => this.searchUser(e)}>Search</Button>\r\n                            <Modal isOpen={this.state.modal} toggle={() => this.toggle()} className={this.props.className}>\r\n                                <ModalHeader toggle={() => this.toggle()}>Select User</ModalHeader>\r\n                                <ModalBody>\r\n                                    <ListGroup>\r\n                                        {this.state.userList && this.state.userList.length > 0 ?\r\n                                            this.state.userList.map(\r\n                                                user => {\r\n                                                    return (\r\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignUser(user)}>{user.firstName + ' ' + user.lastName}</ListGroupItem>\r\n                                                    );\r\n                                                })\r\n                                            : <ListGroupItem disabled>Please add users to add/update projects</ListGroupItem>}\r\n                                    </ListGroup>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"secondary\" onClick={() => this.toggle()}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup check row>\r\n                        <Col sm={{ size: 12, offset: 9 }}>\r\n                            <Button onClick={e => this.addOrEditProject(e, this.state.userAction)}>{this.state.labels[this.state.userAction]}</Button>{' '}\r\n                            <Button className=\"secondary\" onClick={e => this.reset(e)}>Reset</Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    selectDate() {\r\n        const prevState = this.state.selectDate\r\n        this.setState(({\r\n            selectDate: !prevState,\r\n            datePickerDisabled: prevState\r\n        }));\r\n\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    assignUser(user) {\r\n        console.log(user)\r\n        this.setState(prevState => ({\r\n            managerName: user.firstName + ' ' + user.lastName,\r\n            managerId: user.id,\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    onPriorityChange(args) {\r\n        this.setState({\r\n            priority: args[0]\r\n        });\r\n    }\r\n\r\n    searchUser(e) {\r\n        this.toggle();\r\n        console.log(e);\r\n    }\r\n\r\n    reset(e) {\r\n        this.setState({\r\n            projectName: '',\r\n            priority: 0,\r\n            managerName: '',\r\n            managerId: '',\r\n            selectDate: false,\r\n            datePickerDisabled: true,\r\n            startDate: '',\r\n            endDate: '',\r\n            id: '',\r\n            userAction: 'addProject',\r\n        })\r\n    }\r\n\r\n    addOrEditProject(e, userAction) {\r\n        console.log(e);\r\n        console.log(userAction)\r\n        const projectDetails = {\r\n            projectName: this.state.projectName,\r\n            priority: this.state.priority,\r\n            managerName: this.state.managerName,\r\n            managerId: this.state.managerId,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate\r\n        }\r\n        if (userAction === 'addProject') {\r\n            projectDetails.id = 'id-' + Math.random().toString(36).substr(2, 16);\r\n            projectDetails.status = \"New\";\r\n        }\r\n        if (userAction === 'updateProject') {\r\n            projectDetails.id = this.state.id;\r\n        }\r\n\r\n        // TODO - validation\r\n        console.log(projectDetails);\r\n        this.props.addProject(userAction, projectDetails);\r\n        this.reset();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        this.setState({\r\n            [name]: e.target.value\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default AddProject;\r\n"]},"metadata":{},"sourceType":"module"}