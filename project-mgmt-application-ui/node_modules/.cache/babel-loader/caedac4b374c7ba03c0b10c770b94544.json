{"ast":null,"code":"import _defineProperty from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\src\\\\assets\\\\components\\\\task\\\\TaskList.jsx\";\nimport React, { Component } from 'react';\nimport './Task.css';\nimport { ListGroup, ListGroupItem, Button, Row, Col, ButtonGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter, Label } from 'reactstrap';\nimport _sortBy from 'lodash/sortBy';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n    _this.state = {\n      taskList: props.taskList || [],\n      sortBy: '',\n      searchText: '',\n      projectModal: false,\n      projectName: ''\n    };\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        taskList: nextProps.taskList || [],\n        sortBy: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var taskList = this.state.taskList;\n      var sortBy = this.state.sortBy;\n      var projectName = this.state.projectName;\n\n      if (sortBy) {\n        taskList = _sortBy(taskList, sortBy);\n      }\n\n      if (projectName) {\n        taskList = taskList.filter(function (task) {\n          if (task.projectName.indexOf(projectName) > -1) {\n            return task;\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"list-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" Project: \"), \" \"), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.projectName,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleProjectModal(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        id: \"projectModal\",\n        isOpen: this.state.projectModal,\n        toggle: function toggle() {\n          return _this2.toggleProjectModal();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggleProjectModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Select Project\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.taskList && this.state.taskList.length > 0 ? this.state.taskList.map(function (task) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignProject(task.projectName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, task.projectName);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Please add users to add/update projects\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggleProjectModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Cancel\")))), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"   \", React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \" Sort task by: \"), \" \"), React.createElement(Col, {\n        xs: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"   \", React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.sortList(\"startDate\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.sortList(\"endDate\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"End Date\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.sortList(\"priority\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Priority\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.sortList(\"status\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Completed\"))))), React.createElement(\"div\", {\n        className: \"list-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, taskList.map(function (task) {\n        return _this2.taskEntry(task);\n      })));\n    }\n  }, {\n    key: \"wildCardSearch\",\n    value: function wildCardSearch(searchText) {\n      this.setState({\n        searchText: searchText\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      this.setState(_defineProperty({}, name, e.target.value));\n    }\n  }, {\n    key: \"sortList\",\n    value: function sortList(sortyBy) {\n      this.setState({\n        sortBy: sortyBy\n      });\n    }\n  }, {\n    key: \"taskEntry\",\n    value: function taskEntry(task) {\n      var _this3 = this;\n\n      var section = React.createElement(\"div\", {\n        className: \"list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Task\")), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Parent\")), React.createElement(Col, {\n        xs: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Priority\")), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Start\")), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"End\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        disabled: true,\n        tag: \"a\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, task.task))), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        tag: \"a\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, task.parentTask))), React.createElement(Col, {\n        xs: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, task.priority)), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, task.startDate)), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, task.endDate)), React.createElement(Col, {\n        xs: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this3.editTask(task);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Edit\")), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this3.editTask(task);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"End Task\"))));\n      return section;\n    }\n  }, {\n    key: \"editTask\",\n    value: function editTask(task) {\n      this.props.editTask(task);\n    }\n  }, {\n    key: \"toggleProjectModal\",\n    value: function toggleProjectModal() {\n      this.setState(function (prevState) {\n        return {\n          projectModal: !prevState.projectModal\n        };\n      });\n    }\n  }, {\n    key: \"assignProject\",\n    value: function assignProject(projectName) {\n      this.setState(function (prevState) {\n        return {\n          projectName: projectName,\n          projectModal: !prevState.projectModal\n        };\n      });\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport default TaskList;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\application-ui\\src\\assets\\components\\task\\TaskList.jsx"],"names":["React","Component","ListGroup","ListGroupItem","Button","Row","Col","ButtonGroup","Input","Modal","ModalHeader","ModalBody","ModalFooter","Label","_sortBy","TaskList","props","state","taskList","sortBy","searchText","projectModal","projectName","nextProps","setState","filter","task","indexOf","e","toggleProjectModal","className","length","map","assignProject","sortList","taskEntry","name","target","value","sortyBy","section","parentTask","priority","startDate","endDate","editTask","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Task.css';\r\nimport { ListGroup, ListGroupItem, Button, Row, Col, ButtonGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter, Label } from 'reactstrap';\r\nimport _sortBy from 'lodash/sortBy';\r\n\r\nclass TaskList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskList: props.taskList || [],\r\n            sortBy: '',\r\n            searchText: '',\r\n            projectModal: false,\r\n            projectName: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            taskList: nextProps.taskList || [],\r\n            sortBy: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let taskList = this.state.taskList;\r\n        const sortBy = this.state.sortBy;\r\n        const projectName = this.state.projectName;\r\n        if (sortBy) {\r\n            taskList = _sortBy(taskList, sortBy)\r\n        }\r\n        if (projectName) {\r\n            taskList = taskList.filter(task => {\r\n                if (task.projectName.indexOf(projectName) > -1) {\r\n                    return task;\r\n                }\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"list-section\">\r\n                <div className=\"list-filter\">\r\n                    <Row>\r\n                        <Col xs=\"1\"><Label> Project: </Label> </Col>\r\n                        <Col sm={3}>\r\n                            <Input type=\"text\" value={this.state.projectName} disabled />\r\n                        </Col>\r\n                        <Col sm={1}>\r\n                            <Button onClick={e => this.toggleProjectModal(e)}>Search</Button>\r\n                            <Modal id='projectModal' isOpen={this.state.projectModal} toggle={() => this.toggleProjectModal()} className={this.props.className}>\r\n                                <ModalHeader toggle={() => this.toggleProjectModal()}>Select Project</ModalHeader>\r\n                                <ModalBody>\r\n                                    <ListGroup>\r\n                                        {this.state.taskList && this.state.taskList.length > 0 ?\r\n                                            this.state.taskList.map(\r\n                                                task => {\r\n                                                    return (\r\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignProject(task.projectName)}>{task.projectName}</ListGroupItem>\r\n                                                    );\r\n                                                })\r\n                                            : <ListGroupItem disabled>Please add users to add/update projects</ListGroupItem>}\r\n                                    </ListGroup>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"secondary\" onClick={() => this.toggleProjectModal()}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </Col>\r\n                        <Col xs=\"2\">   <Label> Sort task by: </Label> </Col>\r\n                        <Col xs=\"5\">   <ButtonGroup>\r\n                            <Button onClick={e => this.sortList(\"startDate\")}>Start Date</Button>\r\n                            <Button onClick={e => this.sortList(\"endDate\")}>End Date</Button>\r\n                            <Button onClick={e => this.sortList(\"priority\")}>Priority</Button>\r\n                            <Button onClick={e => this.sortList(\"status\")}>Completed</Button>\r\n                        </ButtonGroup></Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"list-view\">\r\n                    {taskList.map((task) => {\r\n                        return this.taskEntry(task)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    wildCardSearch(searchText) {\r\n        this.setState({\r\n            searchText: searchText\r\n        });\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        this.setState({\r\n            [name]: e.target.value\r\n        });\r\n    }\r\n\r\n    sortList(sortyBy) {\r\n        this.setState({\r\n            sortBy: sortyBy\r\n        })\r\n    }\r\n\r\n    taskEntry(task) {\r\n        const section = (\r\n            <div className=\"list-item\">\r\n            <Row>\r\n            <Col xs=\"2\">\r\n                        <span>Task</span>\r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                        <span>Parent</span>\r\n                    </Col>\r\n                    <Col xs=\"1\">\r\n                        <span>Priority</span>\r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                        <span>Start</span>\r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                        <span>End</span>\r\n                    </Col>\r\n            </Row>\r\n                <Row>\r\n\r\n                    <Col xs=\"2\"><ListGroup>\r\n                        <ListGroupItem disabled tag=\"a\" href=\"#\">{task.task}</ListGroupItem>\r\n                    </ListGroup>\r\n                    </Col>\r\n                    <Col xs=\"2\"><ListGroup>\r\n                    <ListGroupItem tag=\"a\" href=\"#\">{task.parentTask}</ListGroupItem>\r\n                    </ListGroup>\r\n                    </Col>\r\n                    <Col xs=\"1\">\r\n                        <span>{task.priority}</span>\r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                        <span>{task.startDate}</span>\r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                        <span>{task.endDate}</span>\r\n                    </Col>\r\n                    <Col xs=\"1\"> <Button onClick={e => this.editTask(task)}>Edit</Button></Col>\r\n                    <Col xs=\"2\"> <Button onClick={e => this.editTask(task)}>End Task</Button></Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n        return section;\r\n    }\r\n\r\n    editTask(task) {\r\n        this.props.editTask(task);\r\n    }\r\n\r\n    toggleProjectModal() {\r\n        this.setState(prevState => ({\r\n            projectModal: !prevState.projectModal\r\n        }));\r\n    }\r\n\r\n    assignProject(projectName) {\r\n        this.setState(prevState => ({\r\n            projectName: projectName,\r\n            projectModal: !prevState.projectModal\r\n        }));\r\n    }\r\n}\r\n\r\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}