{"ast":null,"code":"import _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\application-ui\\\\src\\\\assets\\\\components\\\\user\\\\User.jsx\";\nimport React, { Component } from 'react';\nimport AddUser from './AddUser';\nimport UserList from './UserList';\nimport './User.css';\nimport request from 'request';\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n    _this.state = {\n      userList: props.userList,\n      addUserResponse: {},\n      currentUser: {},\n      userAction: ''\n    };\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      if (props.userList) {\n        this.setState({\n          userList: props.userList\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      request.get('http://localhost:3000/spi/v1/tenants/US_CUSTOMER_WEB/utilService').on('response', function (response) {\n        console.log(response.statusCode);\n        console.log(response.headers);\n      });\n      return React.createElement(\"div\", {\n        className: \"user-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(AddUser, {\n        addOrEditUser: function addOrEditUser(action, user) {\n          return _this2.addOrEditUser(action, user);\n        },\n        addUserResponse: this.state.addUserResponse,\n        currentUser: this.state.currentUser,\n        userAction: this.state.userAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(UserList, {\n        userList: this.state.userList,\n        editUser: function editUser(user) {\n          return _this2.editUser(user);\n        },\n        deleteUser: function deleteUser(user) {\n          return _this2.deleteUser(user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"addOrEditUser\",\n    value: function addOrEditUser(action, user) {\n      console.log(\"From parent, action = \" + action);\n      console.log(user);\n      var userListUpdated = this.state.userList;\n\n      if (action === 'addUser') {\n        userListUpdated.push(user);\n      } else if (action === 'editUser') {\n        userListUpdated.map(function (userToUpdate) {\n          if (user.employeeID === userToUpdate.employeeID) {\n            userToUpdate.firstName = user.firstName;\n            userToUpdate.lastName = user.lastName;\n          }\n        });\n      }\n\n      this.setState({\n        userList: userListUpdated,\n        addUserResponse: {\n          status: 'success'\n        },\n        currentUser: {},\n        userAction: 'addUser'\n      });\n    }\n  }, {\n    key: \"editUser\",\n    value: function editUser(user) {\n      this.setState({\n        currentUser: user,\n        userAction: 'editUser'\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(userToDelete) {\n      var userListUpdated = this.state.userList;\n      userListUpdated = userListUpdated.filter(function (user) {\n        return user.employeeID !== userToDelete.employeeID;\n      });\n      this.setState({\n        userList: userListUpdated\n      });\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\application-ui\\src\\assets\\components\\user\\User.jsx"],"names":["React","Component","AddUser","UserList","request","User","props","state","userList","addUserResponse","currentUser","userAction","setState","get","on","response","console","log","statusCode","headers","action","user","addOrEditUser","editUser","deleteUser","userListUpdated","push","map","userToUpdate","employeeID","firstName","lastName","status","userToDelete","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AddUser from './AddUser';\r\nimport UserList from './UserList';\r\nimport './User.css';\r\nimport request from 'request';\r\n\r\nclass User extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userList: props.userList,\r\n      addUserResponse: {},\r\n      currentUser: {},\r\n      userAction: ''\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.userList) {\r\n      this.setState({\r\n        userList: props.userList\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    request\r\n      .get('http://localhost:3000/spi/v1/tenants/US_CUSTOMER_WEB/utilService')\r\n      .on('response', function (response) {\r\n        console.log(response.statusCode);\r\n        console.log(response.headers);\r\n      });\r\n    return (\r\n      <div className=\"user-section\">\r\n        <AddUser addOrEditUser={(action, user) => this.addOrEditUser(action, user)} addUserResponse={this.state.addUserResponse}\r\n          currentUser={this.state.currentUser} userAction={this.state.userAction} />\r\n\r\n        <div className=\"divider\"></div>\r\n\r\n        <UserList userList={this.state.userList} editUser={(user) => this.editUser(user)} deleteUser={(user) => this.deleteUser(user)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  addOrEditUser(action, user) {\r\n    console.log(\"From parent, action = \" + action);\r\n    console.log(user);\r\n    let userListUpdated = this.state.userList;\r\n    if (action === 'addUser') {\r\n      userListUpdated.push(user)\r\n    } else if (action === 'editUser') {\r\n      userListUpdated.map(userToUpdate => {\r\n        if (user.employeeID === userToUpdate.employeeID) {\r\n          userToUpdate.firstName = user.firstName;\r\n          userToUpdate.lastName = user.lastName;\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      userList: userListUpdated,\r\n      addUserResponse: {\r\n        status: 'success'\r\n      },\r\n      currentUser: {},\r\n      userAction: 'addUser'\r\n    });\r\n  }\r\n\r\n  editUser(user) {\r\n    this.setState({\r\n      currentUser: user,\r\n      userAction: 'editUser'\r\n    });\r\n  }\r\n\r\n  deleteUser(userToDelete) {\r\n    let userListUpdated = this.state.userList;\r\n    userListUpdated = userListUpdated.filter(user => user.employeeID !== userToDelete.employeeID);\r\n    this.setState({\r\n      userList: userListUpdated\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}