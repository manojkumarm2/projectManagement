{"ast":null,"code":"import _defineProperty from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitRepos\\\\us-dig-clone\\\\cde-project-manager-app\\\\project-mgmt-application-ui\\\\src\\\\assets\\\\components\\\\project\\\\AddProject.jsx\";\nimport React, { Component } from 'react';\nimport './Project.css';\nimport { Button, Form, FormGroup, Label, Input, Col, Modal, ModalHeader, ModalBody, ModalFooter, ListGroup, ListGroupItem, Alert } from 'reactstrap';\nimport { format, addDays, differenceInCalendarDays } from 'date-fns';\n\nvar AddProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddProject, _Component);\n\n  function AddProject(props) {\n    var _this;\n\n    _classCallCheck(this, AddProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProject).call(this, props));\n    var labels = {\n      'addProject': 'Add',\n      'updateProject': 'Update'\n    };\n    var currentDate = format(new Date(), 'YYYY-MM-DD');\n    var nextDate = format(addDays(new Date(), 1), 'YYYY-MM-DD');\n    var projectDetails = props.currentProject || {};\n    _this.state = {\n      id: projectDetails.id || '',\n      projectName: projectDetails.projectName || '',\n      priority: projectDetails.priority || 0,\n      managerName: projectDetails.managerName || '',\n      managerId: projectDetails.managerId || '',\n      userAction: props.userAction || 'addProject',\n      labels: labels,\n      modal: false,\n      userList: props.userList,\n      selectDate: false,\n      datePickerDisabled: true,\n      startDate: '',\n      currentDate: currentDate,\n      nextDate: nextDate,\n      endDate: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddProject, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"Next set of props\");\n      console.log(nextProps);\n      var projectDetails = nextProps.currentProject;\n\n      if (projectDetails) {\n        var startDate = projectDetails.startDate;\n        var endDate = projectDetails.endDate;\n        var selectDate = false;\n\n        if (startDate && startDate) {\n          selectDate = true;\n        }\n\n        this.setState({\n          userList: nextProps.userList,\n          id: projectDetails.id || '',\n          projectName: projectDetails.projectName || '',\n          priority: projectDetails.priority || 0,\n          managerName: projectDetails.managerName || '',\n          startDate: startDate || '',\n          endDate: endDate || '',\n          selectDate: selectDate,\n          datePickerDisabled: !selectDate,\n          managerId: projectDetails.managerId || '',\n          userAction: nextProps.userAction || 'addProject'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.formError && React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"All Fields are required!\"))), this.state.endDateValidationError && React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"End date cannot be earlier than start date\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"firstName\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Project:\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.projectName,\n        invalid: this.state.projectNameInvalid,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"projectName\", e);\n        },\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"projectName\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startEnd\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Col, {\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        checked: this.state.selectDate,\n        onChange: function onChange(e) {\n          return _this2.selectDate(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), ' ', \"Set Start and End Date\")), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"startDate\",\n        id: \"startDate\",\n        placeholder: \"Start Date\",\n        invalid: this.state.startDateInvalid,\n        disabled: this.state.datePickerDisabled,\n        value: this.state.startDate,\n        min: this.state.currentDate,\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"startDate\", e);\n        },\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"startDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"endDate\",\n        id: \"endDate\",\n        placeholder: \"End Date\",\n        invalid: this.state.endDateInvalid,\n        disabled: this.state.datePickerDisabled,\n        value: this.state.endDate,\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"endDate\", e);\n        },\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"endDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"priority\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Priority:\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"range\",\n        min: \"1\",\n        max: \"30\",\n        invalid: this.state.priorityInvalid,\n        value: this.state.priority,\n        class: \"slider\",\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"priority\", e);\n        },\n        onChange: function onChange(e) {\n          return _this2.onPriorityChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"manager\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Manager:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        invalid: this.state.managerNameInvalid,\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"managerName\", e);\n        },\n        disabled: true,\n        value: this.state.managerName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.searchUser(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Select User\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.userList && this.state.userList.length > 0 ? this.state.userList.map(function (user) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignUser(user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, user.firstName + ' ' + user.lastName);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Please add users to add/update projects\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: 12,\n          offset: 9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.addOrEditProject(e, _this2.state.userAction);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.state.labels[this.state.userAction]), ' ', React.createElement(Button, {\n        className: \"secondary\",\n        onClick: function onClick(e) {\n          return _this2.reset(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Reset\")))));\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(name, e) {\n      console.log(name);\n      var prop = name + \"Invalid\";\n      this.setState(_defineProperty({}, prop, false));\n\n      if (name === 'endDate') {\n        this.setState({\n          endDateValidationError: false\n        });\n      }\n    }\n  }, {\n    key: \"selectDate\",\n    value: function selectDate() {\n      var prevState = this.state.selectDate;\n      var currentDate = this.state.currentDate;\n      var nextDate = this.state.nextDate;\n      this.setState({\n        selectDate: !prevState,\n        datePickerDisabled: prevState,\n        startDateInvalid: false,\n        endDateInvalid: false\n      });\n\n      if (prevState) {\n        this.setState({\n          startDate: '',\n          endDate: ''\n        });\n      } else {\n        this.setState({\n          startDate: currentDate,\n          endDate: nextDate\n        });\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"assignUser\",\n    value: function assignUser(user) {\n      console.log(user);\n      this.setState(function (prevState) {\n        return {\n          managerName: user.firstName + ' ' + user.lastName,\n          managerId: user.id,\n          modal: !prevState.modal,\n          managerNameInvalid: false\n        };\n      });\n    }\n  }, {\n    key: \"onPriorityChange\",\n    value: function onPriorityChange(e) {\n      this.setState({\n        priority: e.target.value\n      });\n    }\n  }, {\n    key: \"searchUser\",\n    value: function searchUser(e) {\n      this.toggle();\n      console.log(e);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(e) {\n      this.setState({\n        projectName: '',\n        priority: 0,\n        managerName: '',\n        managerId: '',\n        selectDate: false,\n        datePickerDisabled: true,\n        startDate: '',\n        endDate: '',\n        id: '',\n        userAction: 'addProject',\n        formError: false,\n        projectNameError: false,\n        priorityError: false,\n        managerNameError: false,\n        startDateError: false,\n        endDateError: false,\n        endDateValidationError: false\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var projectName = this.state.projectName;\n      var priority = this.state.priority;\n      var managerName = this.state.managerName;\n      var startDate = this.state.startDate;\n      var endDate = this.state.endDate;\n      var selectDate = this.state.selectDate;\n      var employeeID = this.state.employeeID;\n      var formError = false;\n\n      if (!projectName || !priority || !managerName) {\n        formError = true;\n        this.setState({\n          formError: formError,\n          priorityInvalid: priority ? false : true,\n          projectNameInvalid: projectName ? false : true,\n          managerNameInvalid: managerName ? false : true\n        });\n      }\n\n      if (selectDate) {\n        if (!startDate || !endDate) {\n          formError = true;\n          this.setState({\n            formError: formError,\n            startDateInvalid: startDate ? false : true,\n            endDateInvalid: endDate ? false : true\n          });\n        } else if (startDate && endDate) {\n          if (differenceInCalendarDays(endDate, startDate) < 1) {\n            formError = true;\n            this.setState({\n              endDateValidationError: true\n            });\n          }\n        }\n      }\n\n      return formError;\n    }\n  }, {\n    key: \"addOrEditProject\",\n    value: function addOrEditProject(e, userAction) {\n      console.log(e);\n      console.log(userAction);\n\n      if (this.validateForm()) {\n        return;\n      }\n\n      var projectDetails = {\n        projectName: this.state.projectName,\n        priority: this.state.priority,\n        managerName: this.state.managerName,\n        managerId: this.state.managerId,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate\n      };\n\n      if (userAction === 'addProject') {\n        projectDetails.id = null;\n        projectDetails.status = \"New\";\n      }\n\n      if (userAction === 'updateProject') {\n        projectDetails.id = this.state.id;\n      } // TODO - validation\n\n\n      console.log(projectDetails);\n      this.props.addProject(userAction, projectDetails);\n      this.reset();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      this.setState(_defineProperty({}, name, e.target.value));\n    }\n  }]);\n\n  return AddProject;\n}(Component);\n\nexport default AddProject;","map":{"version":3,"sources":["D:\\GitRepos\\us-dig-clone\\cde-project-manager-app\\project-mgmt-application-ui\\src\\assets\\components\\project\\AddProject.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Col","Modal","ModalHeader","ModalBody","ModalFooter","ListGroup","ListGroupItem","Alert","format","addDays","differenceInCalendarDays","AddProject","props","labels","currentDate","Date","nextDate","projectDetails","currentProject","state","id","projectName","priority","managerName","managerId","userAction","modal","userList","selectDate","datePickerDisabled","startDate","endDate","nextProps","console","log","setState","formError","endDateValidationError","projectNameInvalid","e","handleChange","focus","startDateInvalid","endDateInvalid","priorityInvalid","onPriorityChange","managerNameInvalid","searchUser","toggle","className","length","map","user","assignUser","firstName","lastName","size","offset","addOrEditProject","reset","name","prop","prevState","target","value","projectNameError","priorityError","managerNameError","startDateError","endDateError","employeeID","validateForm","status","addProject"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Project.css';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input, Col,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    ListGroup, ListGroupItem, Alert\r\n} from 'reactstrap';\r\nimport { format, addDays, differenceInCalendarDays } from 'date-fns';\r\n\r\nclass AddProject extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const labels = {\r\n            'addProject': 'Add',\r\n            'updateProject': 'Update'\r\n        };\r\n        const currentDate = format(new Date(), 'YYYY-MM-DD');\r\n        const nextDate = format(addDays(new Date(), 1), 'YYYY-MM-DD');\r\n        const projectDetails = props.currentProject || {};\r\n        this.state = {\r\n            id: projectDetails.id || '',\r\n            projectName: projectDetails.projectName || '',\r\n            priority: projectDetails.priority || 0,\r\n            managerName: projectDetails.managerName || '',\r\n            managerId: projectDetails.managerId || '',\r\n            userAction: props.userAction || 'addProject',\r\n            labels: labels,\r\n            modal: false,\r\n            userList: props.userList,\r\n            selectDate: false,\r\n            datePickerDisabled: true,\r\n            startDate: '',\r\n            currentDate: currentDate,\r\n            nextDate: nextDate,\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Next set of props\")\r\n        console.log(nextProps)\r\n        const projectDetails = nextProps.currentProject;\r\n        if (projectDetails) {\r\n            const startDate = projectDetails.startDate;\r\n            const endDate = projectDetails.endDate;\r\n            let selectDate = false\r\n            if (startDate && startDate) {\r\n                selectDate = true;\r\n            }\r\n            this.setState({\r\n                userList: nextProps.userList,\r\n                id: projectDetails.id || '',\r\n                projectName: projectDetails.projectName || '',\r\n                priority: projectDetails.priority || 0,\r\n                managerName: projectDetails.managerName || '',\r\n                startDate: startDate || '',\r\n                endDate: endDate || '',\r\n                selectDate: selectDate,\r\n                datePickerDisabled: !selectDate,\r\n                managerId: projectDetails.managerId || '',\r\n                userAction: nextProps.userAction || 'addProject',\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-section\">\r\n                <Form>\r\n\r\n                    {this.state.formError &&\r\n                        <FormGroup row>\r\n                            <Col sm={12}><Alert color=\"danger\">All Fields are required!</Alert></Col>\r\n                        </FormGroup>\r\n                    }\r\n                    {this.state.endDateValidationError &&\r\n                        <FormGroup row>\r\n                            <Col sm={12}><Alert color=\"danger\">End date cannot be earlier than start date</Alert></Col>\r\n                        </FormGroup>\r\n                    }\r\n\r\n                    <FormGroup row>\r\n                        <Label for=\"firstName\" sm={2}>Project:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"text\" value={this.state.projectName} invalid={this.state.projectNameInvalid}\r\n                                onChange={e => this.handleChange(\"projectName\", e)}\r\n                                onFocus={e => this.focus(\"projectName\", e)} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"startEnd\" sm={2}></Label>\r\n                        <Col sm={2}>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" id=\"checkbox\" checked={this.state.selectDate} onChange={e => this.selectDate(e)} />{' '}\r\n                                Set Start and End Date\r\n                            </Label>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"startDate\"\r\n                                id=\"startDate\"\r\n                                placeholder=\"Start Date\"\r\n                                invalid={this.state.startDateInvalid}\r\n                                disabled={this.state.datePickerDisabled}\r\n                                value={this.state.startDate}\r\n                                min={this.state.currentDate}\r\n                                onFocus={e => this.focus(\"startDate\", e)}\r\n                                onChange={e => this.handleChange(\"startDate\", e)}\r\n                            />\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"endDate\"\r\n                                id=\"endDate\"\r\n                                placeholder=\"End Date\"\r\n                                invalid={this.state.endDateInvalid}\r\n                                disabled={this.state.datePickerDisabled}\r\n                                value={this.state.endDate}\r\n                                onFocus={e => this.focus(\"endDate\", e)}\r\n                                onChange={e => this.handleChange(\"endDate\", e)}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"priority\" sm={2}>Priority:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"range\" min=\"1\" max=\"30\" invalid={this.state.priorityInvalid}\r\n                                value={this.state.priority} class=\"slider\"\r\n                                onFocus={e => this.focus(\"priority\", e)}\r\n                                onChange={(e) => this.onPriorityChange(e)} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"manager\" sm={2}>Manager:</Label>\r\n                        <Col sm={6}>\r\n                            <Input type=\"text\" invalid={this.state.managerNameInvalid}\r\n                                onFocus={e => this.focus(\"managerName\", e)}\r\n                                disabled value={this.state.managerName} />\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <Button onClick={e => this.searchUser(e)}>Search</Button>\r\n                            <Modal isOpen={this.state.modal} toggle={() => this.toggle()} className={this.props.className}>\r\n                                <ModalHeader toggle={() => this.toggle()}>Select User</ModalHeader>\r\n                                <ModalBody>\r\n                                    <ListGroup>\r\n                                        {this.state.userList && this.state.userList.length > 0 ?\r\n                                            this.state.userList.map(\r\n                                                user => {\r\n                                                    return (\r\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignUser(user)}>{user.firstName + ' ' + user.lastName}</ListGroupItem>\r\n                                                    );\r\n                                                })\r\n                                            : <ListGroupItem disabled>Please add users to add/update projects</ListGroupItem>}\r\n                                    </ListGroup>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"secondary\" onClick={() => this.toggle()}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup check row>\r\n                        <Col sm={{ size: 12, offset: 9 }}>\r\n                            <Button onClick={e => this.addOrEditProject(e, this.state.userAction)}>{this.state.labels[this.state.userAction]}</Button>{' '}\r\n                            <Button className=\"secondary\" onClick={e => this.reset(e)}>Reset</Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    focus(name, e) {\r\n        console.log(name);\r\n        const prop = name + \"Invalid\"\r\n        this.setState({\r\n            [prop]: false\r\n        })\r\n        if(name === 'endDate'){\r\n            this.setState({\r\n                endDateValidationError: false\r\n            });\r\n        }\r\n    }\r\n\r\n    selectDate() {\r\n        const prevState = this.state.selectDate;\r\n        const currentDate = this.state.currentDate;\r\n        const nextDate = this.state.nextDate;\r\n        this.setState(({\r\n            selectDate: !prevState,\r\n            datePickerDisabled: prevState,\r\n            startDateInvalid: false,\r\n            endDateInvalid: false\r\n        }));\r\n\r\n        if (prevState) {\r\n            this.setState({\r\n                startDate: '',\r\n                endDate: ''\r\n            });\r\n        } else {\r\n            this.setState(({\r\n                startDate: currentDate,\r\n                endDate: nextDate\r\n            }));\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    assignUser(user) {\r\n        console.log(user)\r\n        this.setState(prevState => ({\r\n            managerName: user.firstName + ' ' + user.lastName,\r\n            managerId: user.id,\r\n            modal: !prevState.modal,\r\n            managerNameInvalid: false\r\n        }));\r\n    }\r\n\r\n    onPriorityChange(e) {\r\n        this.setState({\r\n            priority: e.target.value\r\n        });\r\n    }\r\n\r\n    searchUser(e) {\r\n        this.toggle();\r\n        console.log(e);\r\n    }\r\n\r\n    reset(e) {\r\n        this.setState({\r\n            projectName: '',\r\n            priority: 0,\r\n            managerName: '',\r\n            managerId: '',\r\n            selectDate: false,\r\n            datePickerDisabled: true,\r\n            startDate: '',\r\n            endDate: '',\r\n            id: '',\r\n            userAction: 'addProject',\r\n            formError: false,\r\n            projectNameError: false,\r\n            priorityError: false,\r\n            managerNameError: false,\r\n            startDateError: false,\r\n            endDateError: false,\r\n            endDateValidationError: false\r\n        })\r\n    }\r\n\r\n    validateForm() {\r\n        const projectName = this.state.projectName;\r\n        const priority = this.state.priority;\r\n        const managerName = this.state.managerName;\r\n        const startDate = this.state.startDate;\r\n        const endDate = this.state.endDate;\r\n        const selectDate = this.state.selectDate;\r\n\r\n        const employeeID = this.state.employeeID;\r\n        let formError = false;\r\n        if (!projectName || !priority || !managerName) {\r\n            formError = true;\r\n            this.setState({\r\n                formError: formError,\r\n                priorityInvalid: priority ? false : true,\r\n                projectNameInvalid: projectName ? false : true,\r\n                managerNameInvalid: managerName ? false : true\r\n            })\r\n        }\r\n        if (selectDate) {\r\n            if (!startDate || !endDate) {\r\n                formError = true;\r\n                this.setState({\r\n                    formError: formError,\r\n                    startDateInvalid: startDate ? false : true,\r\n                    endDateInvalid: endDate ? false : true\r\n                })\r\n            }else if (startDate && endDate) {\r\n                if (differenceInCalendarDays(endDate, startDate) < 1) {\r\n                    formError = true;\r\n                    this.setState({\r\n                        endDateValidationError: true\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return formError;\r\n    }\r\n\r\n    addOrEditProject(e, userAction) {\r\n        console.log(e);\r\n        console.log(userAction)\r\n        if (this.validateForm()) {\r\n            return;\r\n        }\r\n        const projectDetails = {\r\n            projectName: this.state.projectName,\r\n            priority: this.state.priority,\r\n            managerName: this.state.managerName,\r\n            managerId: this.state.managerId,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate\r\n        }\r\n        if (userAction === 'addProject') {\r\n            projectDetails.id = null;\r\n            projectDetails.status = \"New\";\r\n        }\r\n        if (userAction === 'updateProject') {\r\n            projectDetails.id = this.state.id;\r\n        }\r\n\r\n        // TODO - validation\r\n        console.log(projectDetails);\r\n        this.props.addProject(userAction, projectDetails);\r\n        this.reset();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        this.setState({\r\n            [name]: e.target.value\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default AddProject;\r\n"]},"metadata":{},"sourceType":"module"}